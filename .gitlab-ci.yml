stages:
  - lint
  - test

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
      when: never
    - when: always

variables:
  PYTHON_VERSION: "3.10"
  ARTIFACT_NAME_SUFFIX: $CI_COMMIT_SHA-$CI_COMMIT_TIMESTAMP
  UNIT_TESTS_ARTIFACT_NAME: Cortado_core_unit_tests_$ARTIFACT_NAME_SUFFIX

unit_tests:
  stage: test
  image: python:$PYTHON_VERSION
  before_script:
    - pip install pytest
    - git config --global credential.https://gitlab.fit.fraunhofer.de/pm4py/pm4py-core.git.username ${pm4py_core_git_username}
    - git config --global credential.helper store
    - git config --global credential.interactive never
    - echo https://${pm4py_core_git_username}:${pm4py_core_git_password}@gitlab.fit.fraunhofer.de >> /root/.git-credentials
    - pip install -r requirements.txt
  script:
    - pytest --junitxml=report.xml cortado_core/tests/
  # artifacts:
  #   name: $UNIT_TESTS_ARTIFACT_NAME
  #   when: always
  #   reports:
  #     junit: report.xml
  #   expire_in: 2 weeks

.python_critical_check: &python_critical_check
  stage: lint
  image: registry.gitlab.com/gitlab-data/ci-python-image:v0.0.1

python_black_check:
  <<: *python_critical_check
  script:
    - black --check .
